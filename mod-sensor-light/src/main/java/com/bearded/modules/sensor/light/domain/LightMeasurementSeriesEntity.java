package com.bearded.modules.sensor.light.domain;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;

import org.jetbrains.annotations.NotNull;

import static com.bearded.modules.sensor.light.persistence.dao.LightMeasurementSeriesEntityDao.Properties.EndTimestamp;
import static com.bearded.modules.sensor.light.persistence.dao.LightMeasurementSeriesEntityDao.Properties.StartTimestamp;

// KEEP INCLUDES END

/**
 * Entity mapped to table LightMeasurementSeries.
 */
public class LightMeasurementSeriesEntity implements com.bearded.common.database.ParseableJson, java.lang.Comparable<LightMeasurementSeriesEntity> {

    private Long id;
    /**
     * Not-null value.
     */
    private String startTimestamp;
    private String endTimestamp;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public LightMeasurementSeriesEntity() {
    }

    public LightMeasurementSeriesEntity(Long id) {
        this.id = id;
    }

    public LightMeasurementSeriesEntity(Long id, String startTimestamp, String endTimestamp) {
        this.id = id;
        this.startTimestamp = startTimestamp;
        this.endTimestamp = endTimestamp;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Not-null value.
     */
    public String getStartTimestamp() {
        return startTimestamp;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setStartTimestamp(String startTimestamp) {
        this.startTimestamp = startTimestamp;
    }

    public String getEndTimestamp() {
        return endTimestamp;
    }

    public void setEndTimestamp(String endTimestamp) {
        this.endTimestamp = endTimestamp;
    }

    // KEEP METHODS - put your custom methods here

    /**
     * {@inheritDoc}
     * NOTE: This implementation compares the two elements comparing its start timestamp.
     */
    @Override
    public int compareTo(@NotNull final LightMeasurementSeriesEntity another) {
        return this.startTimestamp.compareTo(another.startTimestamp);
    }

    /**
     * {@inheritDoc}
     */
    @NotNull
    @Override
    public JsonObject toJsonObject() {
        final JsonObject jsonObject = new JsonObject();
        jsonObject.add(StartTimestamp.name, new JsonPrimitive(this.startTimestamp));
        jsonObject.add(EndTimestamp.name, new JsonPrimitive(this.endTimestamp));
        return jsonObject;
    }

    // KEEP METHODS END

}
