package com.bearded.modules.sensor.light.persistence.dao;

import android.database.sqlite.SQLiteDatabase;

import com.bearded.modules.sensor.light.domain.LightMeasurementEntity;
import com.bearded.modules.sensor.light.domain.LightMeasurementSeriesEntity;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig lightMeasurementSeriesEntityDaoConfig;
    private final DaoConfig lightMeasurementEntityDaoConfig;

    private final LightMeasurementSeriesEntityDao lightMeasurementSeriesEntityDao;
    private final LightMeasurementEntityDao lightMeasurementEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        lightMeasurementSeriesEntityDaoConfig = daoConfigMap.get(LightMeasurementSeriesEntityDao.class).clone();
        lightMeasurementSeriesEntityDaoConfig.initIdentityScope(type);

        lightMeasurementEntityDaoConfig = daoConfigMap.get(LightMeasurementEntityDao.class).clone();
        lightMeasurementEntityDaoConfig.initIdentityScope(type);

        lightMeasurementSeriesEntityDao = new LightMeasurementSeriesEntityDao(lightMeasurementSeriesEntityDaoConfig, this);
        lightMeasurementEntityDao = new LightMeasurementEntityDao(lightMeasurementEntityDaoConfig, this);

        registerDao(LightMeasurementSeriesEntity.class, lightMeasurementSeriesEntityDao);
        registerDao(LightMeasurementEntity.class, lightMeasurementEntityDao);
    }

    public void clear() {
        lightMeasurementSeriesEntityDaoConfig.getIdentityScope().clear();
        lightMeasurementEntityDaoConfig.getIdentityScope().clear();
    }

    public LightMeasurementSeriesEntityDao getLightMeasurementSeriesEntityDao() {
        return lightMeasurementSeriesEntityDao;
    }

    public LightMeasurementEntityDao getLightMeasurementEntityDao() {
        return lightMeasurementEntityDao;
    }

}
