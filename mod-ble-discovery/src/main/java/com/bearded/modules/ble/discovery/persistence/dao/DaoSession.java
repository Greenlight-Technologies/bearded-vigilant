package com.bearded.modules.ble.discovery.persistence.dao;

import android.database.sqlite.SQLiteDatabase;

import com.bearded.modules.ble.discovery.domain.BleDeviceEntity;
import com.bearded.modules.ble.discovery.domain.BleEventEntity;
import com.bearded.modules.ble.discovery.domain.BleEventSeriesEntity;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bleDeviceEntityDaoConfig;
    private final DaoConfig bleEventSeriesEntityDaoConfig;
    private final DaoConfig bleEventEntityDaoConfig;

    private final BleDeviceEntityDao bleDeviceEntityDao;
    private final BleEventSeriesEntityDao bleEventSeriesEntityDao;
    private final BleEventEntityDao bleEventEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bleDeviceEntityDaoConfig = daoConfigMap.get(BleDeviceEntityDao.class).clone();
        bleDeviceEntityDaoConfig.initIdentityScope(type);

        bleEventSeriesEntityDaoConfig = daoConfigMap.get(BleEventSeriesEntityDao.class).clone();
        bleEventSeriesEntityDaoConfig.initIdentityScope(type);

        bleEventEntityDaoConfig = daoConfigMap.get(BleEventEntityDao.class).clone();
        bleEventEntityDaoConfig.initIdentityScope(type);

        bleDeviceEntityDao = new BleDeviceEntityDao(bleDeviceEntityDaoConfig, this);
        bleEventSeriesEntityDao = new BleEventSeriesEntityDao(bleEventSeriesEntityDaoConfig, this);
        bleEventEntityDao = new BleEventEntityDao(bleEventEntityDaoConfig, this);

        registerDao(BleDeviceEntity.class, bleDeviceEntityDao);
        registerDao(BleEventSeriesEntity.class, bleEventSeriesEntityDao);
        registerDao(BleEventEntity.class, bleEventEntityDao);
    }

    public void clear() {
        bleDeviceEntityDaoConfig.getIdentityScope().clear();
        bleEventSeriesEntityDaoConfig.getIdentityScope().clear();
        bleEventEntityDaoConfig.getIdentityScope().clear();
    }

    public BleDeviceEntityDao getBleDeviceEntityDao() {
        return bleDeviceEntityDao;
    }

    public BleEventSeriesEntityDao getBleEventSeriesEntityDao() {
        return bleEventSeriesEntityDao;
    }

    public BleEventEntityDao getBleEventEntityDao() {
        return bleEventEntityDao;
    }

}
