package com.bearded.modules.sensor.internal.domain;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import com.google.gson.JsonObject;

import org.jetbrains.annotations.NotNull;
// KEEP INCLUDES END

/**
 * Entity mapped to table InternalSensor.
 */
public class InternalSensorEntity implements com.bearded.common.database.ParseableJson, java.lang.Comparable<InternalSensorEntity> {

    private Long id;
    /**
     * Not-null value.
     */
    private String sensorName;
    /**
     * Not-null value.
     */
    private String sensorType;
    /**
     * Not-null value.
     */
    private String sensorUnit;
    private Integer minimumDelayMicroseconds;
    private Integer maximumDelayMicroseconds;
    private Integer fifoMaxEventCount;
    private Integer fifoReservedEventCount;
    private Float maximumRange;
    private String reportingMode;
    private Float powerInMilliAmperes;
    private Float sensorResolution;
    private String sensorVendor;
    private Integer sensorVersion;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public InternalSensorEntity() {
    }

    public InternalSensorEntity(Long id) {
        this.id = id;
    }

    public InternalSensorEntity(Long id, String sensorName, String sensorType, String sensorUnit, Integer minimumDelayMicroseconds, Integer maximumDelayMicroseconds, Integer fifoMaxEventCount, Integer fifoReservedEventCount, Float maximumRange, String reportingMode, Float powerInMilliAmperes, Float sensorResolution, String sensorVendor, Integer sensorVersion) {
        this.id = id;
        this.sensorName = sensorName;
        this.sensorType = sensorType;
        this.sensorUnit = sensorUnit;
        this.minimumDelayMicroseconds = minimumDelayMicroseconds;
        this.maximumDelayMicroseconds = maximumDelayMicroseconds;
        this.fifoMaxEventCount = fifoMaxEventCount;
        this.fifoReservedEventCount = fifoReservedEventCount;
        this.maximumRange = maximumRange;
        this.reportingMode = reportingMode;
        this.powerInMilliAmperes = powerInMilliAmperes;
        this.sensorResolution = sensorResolution;
        this.sensorVendor = sensorVendor;
        this.sensorVersion = sensorVersion;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Not-null value.
     */
    public String getSensorName() {
        return sensorName;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setSensorName(String sensorName) {
        this.sensorName = sensorName;
    }

    /**
     * Not-null value.
     */
    public String getSensorType() {
        return sensorType;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setSensorType(String sensorType) {
        this.sensorType = sensorType;
    }

    /**
     * Not-null value.
     */
    public String getSensorUnit() {
        return sensorUnit;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setSensorUnit(String sensorUnit) {
        this.sensorUnit = sensorUnit;
    }

    public Integer getMinimumDelayMicroseconds() {
        return minimumDelayMicroseconds;
    }

    public void setMinimumDelayMicroseconds(Integer minimumDelayMicroseconds) {
        this.minimumDelayMicroseconds = minimumDelayMicroseconds;
    }

    public Integer getMaximumDelayMicroseconds() {
        return maximumDelayMicroseconds;
    }

    public void setMaximumDelayMicroseconds(Integer maximumDelayMicroseconds) {
        this.maximumDelayMicroseconds = maximumDelayMicroseconds;
    }

    public Integer getFifoMaxEventCount() {
        return fifoMaxEventCount;
    }

    public void setFifoMaxEventCount(Integer fifoMaxEventCount) {
        this.fifoMaxEventCount = fifoMaxEventCount;
    }

    public Integer getFifoReservedEventCount() {
        return fifoReservedEventCount;
    }

    public void setFifoReservedEventCount(Integer fifoReservedEventCount) {
        this.fifoReservedEventCount = fifoReservedEventCount;
    }

    public Float getMaximumRange() {
        return maximumRange;
    }

    public void setMaximumRange(Float maximumRange) {
        this.maximumRange = maximumRange;
    }

    public String getReportingMode() {
        return reportingMode;
    }

    public void setReportingMode(String reportingMode) {
        this.reportingMode = reportingMode;
    }

    public Float getPowerInMilliAmperes() {
        return powerInMilliAmperes;
    }

    public void setPowerInMilliAmperes(Float powerInMilliAmperes) {
        this.powerInMilliAmperes = powerInMilliAmperes;
    }

    public Float getSensorResolution() {
        return sensorResolution;
    }

    public void setSensorResolution(Float sensorResolution) {
        this.sensorResolution = sensorResolution;
    }

    public String getSensorVendor() {
        return sensorVendor;
    }

    public void setSensorVendor(String sensorVendor) {
        this.sensorVendor = sensorVendor;
    }

    public Integer getSensorVersion() {
        return sensorVersion;
    }

    public void setSensorVersion(Integer sensorVersion) {
        this.sensorVersion = sensorVersion;
    }

    // KEEP METHODS - put your custom methods here

    /**
     * {@inheritDoc}
     * NOTE: This implementation compares the two elements comparing its sensor name.
     */
    @Override
    public int compareTo(@NotNull final InternalSensorEntity anotherSensorEntity) {
        return this.sensorName.compareTo(anotherSensorEntity.getSensorName());
    }

    @NotNull
    @Override
    public JsonObject toJsonObject() {
        return null;
    }
    // KEEP METHODS END

}
