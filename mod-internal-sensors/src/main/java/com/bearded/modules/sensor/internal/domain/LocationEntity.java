package com.bearded.modules.sensor.internal.domain;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;

import static com.bearded.modules.sensor.internal.persistence.dao.LocationEntityDao.Properties.Latitude;
import static com.bearded.modules.sensor.internal.persistence.dao.LocationEntityDao.Properties.Longitude;

// KEEP INCLUDES END

/**
 * Entity mapped to table Location.
 */
public class LocationEntity implements com.bearded.common.database.ParseableJson, java.lang.Comparable<LocationEntity> {

    private Long id;
    private float latitude;
    private float longitude;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public LocationEntity() {
    }

    public LocationEntity(Long id) {
        this.id = id;
    }

    public LocationEntity(Long id, float latitude, float longitude) {
        this.id = id;
        this.latitude = latitude;
        this.longitude = longitude;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public float getLatitude() {
        return latitude;
    }

    public void setLatitude(float latitude) {
        this.latitude = latitude;
    }

    public float getLongitude() {
        return longitude;
    }

    public void setLongitude(float longitude) {
        this.longitude = longitude;
    }

    // KEEP METHODS - put your custom methods here

    /**
     * {@inheritDoc}
     */
    @SuppressWarnings("SimplifiableIfStatement")
    @Override
    public boolean equals(@Nullable final Object other) {
        if (other == null || !(other instanceof LocationEntity)) {
            return false;
        }
        return compareTo((LocationEntity) other) == 0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int compareTo(@NonNull final LocationEntity other) {
        if (this.getLatitude() > other.getLatitude()) {
            return 1;
        } else if (this.getLatitude() < other.getLatitude()) {
            return -1;
        } else if (this.getLongitude() > other.getLongitude()) {
            return 1;
        } else if (this.getLongitude() < other.getLongitude()) {
            return -1;
        }
        return 0;
    }

    /**
     * {@inheritDoc}
     */
    @NonNull
    @Override
    public JsonObject toJsonObject() {
        final JsonObject jsonObject = new JsonObject();
        jsonObject.add(Latitude.name, new JsonPrimitive(this.latitude));
        jsonObject.add(Longitude.name, new JsonPrimitive(this.latitude));
        return jsonObject;
    }

    // KEEP METHODS END

}
